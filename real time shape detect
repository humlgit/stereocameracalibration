import cv2
import numpy as np

def empty(a):
    pass

img = cv2.imread('C:/Users/mlcv/Desktop/Cam1_Frm1 - Copy.jpg')

cv2.namedWindow("Parameters")
cv2.resizeWindow("Parameters", 640,240)

cv2.createTrackbar("Threshold1", "Parameters", 150,255,empty)
cv2.createTrackbar("Threshold2", "Parameters", 255,255,empty)

imgblur = cv2.GaussianBlur(img,(7,7),1)
imggray = cv2.cvtColor(imgblur, cv2.COLOR_BGR2GRAY)

def getContours(img, imgContour):

    contours, hierarchy = cv2.findContours(img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)


    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area> 12000:
            cv2.drawContours(imgContour, contours, -1, (255,0,255), 7)
            peri = cv2.arcLength(cnt, True)
            approx = cv2.approxPolyDP(cnt, 0.02*peri, True)
            print(len(approx))
    
imgContour = img.copy()

threshold1 = cv2.getTrackbarPos("Threshold1", "Parameters")
threshold2 = cv2.getTrackbarPos("Threshold2", "Parameters")
imgCanny = cv2.Canny(imggray, threshold1, threshold2)

Kernel = np.ones((5,5))
imgDil = cv2.dilate(imgCanny, Kernel, iterations=1)

getContours(imgDil, imgContour)

cv2.imshow("Result", img)
cv2.imshow("Result1", imgblur)
cv2.imshow("Result2", imggray) 
cv2.imshow("Result3", imgCanny) 
cv2.imshow("Result4", imgDil) 
cv2.imshow("Result5", imgContour) 

cv2.waitKey(0)